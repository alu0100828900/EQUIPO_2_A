%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Chapter 3: Procedimiento experimental 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

A continuación se enumerará y se desarrollarán los pasos que se han seguido en la elaboración del programa de las series de Newton en Python.

%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Descripción de los experimentos}
\label{3:sec:1}

El objetivo es crear un polinomio empleando el método de Newton que permita aproximar una función cuyo cálculo es más complejo. Para ello, se necesitan una serie de nodos, puntos determinados dentro de un intervalo de libre elección.
En este experimento, se trabajará en el intervalo [0,1], y aunque es posible escoger cualquier punto, en este caso los nodos, que son cinco, serán equidistantes, es decir, la distancia entre cada uno de ellos será la misma. Así, se almacenan en una estos cinco puntos: 0, 0.25, 0.5,  0.75, 1.0.
Gracias a un método iterativo, se almacenan en otra lista las imágenes correspondientes a los puntos que se han elegido en un nprincipio y en otra, las diferencias divididas, teniendo en cuenta la función del experimento, $f(x) = e ^ x$.
Una vez hallados los coeficientes del polinomio, el método de Newton precisa de un valor "x" que se encuentre en el intervalo que se seleccionó de inicio, en este caso [0,1].
El valor que se ha introducido en este experimento es el x = 0.43.
Para finalizar, el programa muestra el valor del polinomio con x = 0.43 y la función determinada $f(x) = e ^ x$, la imagen de la función en ese mismo punto y el error cometido por el polinomio. 

%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Descripción del material}
\label{3:sec:2}

Los experimentos han sido realizados en un ordenador Packard Bell Atom N2600, procesador fabricado por Intel Atom. Tiene una velocidad de 1.6 GHz y la capacidad de su disco duro es de 320 GB. Tiene 1 GB de memoria RAM.
Sus dimensiones son 35,8 x 23,8 x 7,6 cm y tiene un peso de 2,1 kg.
Con 10,1 pulgadas y una tarjeta gráfica Intel, la batería tiene una duración aproximada de 8 horas.
El Sistema Operativo es Bardinux 3.2.60-generic, una adaptación de la distribución de Linux "Kubuntu".
El programa se ha elaborado en el editor de textos Kate, un paquete incorporado en Bardinux y se compila desde la Terminal, ejecutándose con Python, siendo visible el documento PDF a través del programa Okular.  


%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Resultados obtenidos}
\label{3:sec:3}

El programa se ha eleaborado tomando cinco nodos, que se muestran en la primera columna de la tabla.
Los resultados que se almacenan en la segunda lista son las imágenes correspondientes a la función $f(x) = e ^ x$, y se encuentran en la segunda columna.
En la tercera columna de la tabla están representados los coeficientes del polinomio, calculados a través de las diferencias divididas. 

\input{tables/table.tex}

Para calcularlas, se implementa un código para el número de nodos que tenemos, en este caso son cinco, a partir de la fórmula:

\begin{figure}[h]
\begin{center}
\includegraphics[scale=1.00]{images/diferencias}
\caption{Fórmula diferencias divididas}
\end{center}
\end{figure}

Y por último, se muestran los valores de la parte literal que acompañan a cada uno de los coeficientes, con el valor de la x ya sustituido, x = 0.43
 

%------------------------------------------------------------------------------

%++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
\section{Análisis de los resultados}
\label{3:sec:4}

El objetivo del polinomio de interpolación de Newton es facilitar el cálculo de las imágenes de una función, con la creación de un polinomio, puesto que su cálculo es más sencillo. Sin embargo, al modificar la función, se ha de tener el cuenta el error que se comete.
Teóricamente, es necesario determinar un intervalo (en el experimento es el [0,1]) y asignar una serie de valores, que se denominan nodos, tantos como se desee. Cuanta mayor es la cantidad de nodos, más preciso será el valor del polinomio de Newton (en este ejemplo son cinco nodos, 0, 0.25, 0.5, 0.75, 1.0).
Uno de los apartados de del programa creado ha calculado el valor de la función en una 'x' cuyo valor ha sido asignado por defecto, x = 0.43 y a su vez el valor del polinomio en ese punto. Este cálculo se ha mostrado con 15 decimales.
Además, el programa muestra el error cometido, en este caso 0.00060038095339121078097832651110366.
Esto se debe a que el valor de la función es f(0.43) = 1.53785790450167247911394952097907662 y el valor del polinomio interpolador de Newton en x = 0.43 es 1.53725752354828126833297119446797296.
El resultado proporciona un error de $6{x}10 ^ {-4}$, bastante óptimo. 
El resultado del experimento ha sido realmente positivo, puesto que el intervalo escogido inicialmente era relativamente pequeño, y la cantidad de nodos en relación al tamaño del intervalo era la adecuada. Cuanto mayor es el intervalo, mayor número de nodos  habrá que incluir, puesto que si no, la aproximación mediante el polinomio será muy poco precisa.

